#!/usr/bin/env python
"""
–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
"""
import os
import django

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django –æ–∫—Ä—É–∂–µ–Ω–∏–µ
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shop_project.settings')
django.setup()

from accounts.models import CustomUser
from django.contrib.auth.tokens import default_token_generator
from django.utils.encoding import force_bytes
from django.utils.http import urlsafe_base64_encode
from django.urls import reverse

def create_inactive_user():
    """
    –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    print("üß™ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π email
    test_email = 'newuser@example.com'
    
    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if CustomUser.objects.filter(email=test_email).exists():
        CustomUser.objects.filter(email=test_email).delete()
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email {test_email}")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = CustomUser.objects.create_user(
        email=test_email,
        password='TestPassword123!',
        first_name='–ù–æ–≤—ã–π',
        last_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        phone_number='+79009876543',
        is_active=False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω
    )
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email}")
    print(f"üìã –ê–∫—Ç–∏–≤–µ–Ω: {user.is_active}")
    print(f"üìß Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω: {getattr(user, 'email_confirmed', '–ù–µ—Ç –ø–æ–ª—è')}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    token = default_token_generator.make_token(user)
    uid = urlsafe_base64_encode(force_bytes(user.pk))
    
    print(f"üîë UID: {uid}")
    print(f"üîë Token: {token}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    activation_url = reverse('accounts:activate', kwargs={'uidb64': uid, 'token': token})
    activation_link = f"http://localhost:8000{activation_url}"
    
    print(f"üîó –°—Å—ã–ª–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {activation_link}")
    
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ê–¶–ò–ò:")
    print("="*60)
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
    print("="*60)
    
    return user, activation_link

if __name__ == '__main__':
    create_inactive_user()
