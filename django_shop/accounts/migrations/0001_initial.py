# Generated by Django 4.2.23 on 2025-07-11 09:16

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Основной email для входа в систему', max_length=254, unique=True, verbose_name='Email адрес')),
                ('first_name', models.CharField(blank=True, help_text='Имя пользователя', max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, help_text='Фамилия пользователя', max_length=30, verbose_name='Фамилия')),
                ('phone_number', models.CharField(blank=True, help_text='Номер телефона для связи и доставки', max_length=15, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+79991234567' или '79991234567'", regex='^\\+?7?[0-9]{10}$')], verbose_name='Номер телефона')),
                ('address', models.TextField(blank=True, help_text='Полный адрес для доставки заказов', max_length=500, verbose_name='Адрес доставки')),
                ('date_of_birth', models.DateField(blank=True, help_text='Дата рождения для персональных предложений', null=True, verbose_name='Дата рождения')),
                ('is_active', models.BooleanField(default=False, help_text='Определяет, активен ли аккаунт (подтвержден ли email)', verbose_name='Аккаунт активен')),
                ('is_staff', models.BooleanField(default=False, help_text='Определяет, может ли пользователь войти в админ-панель', verbose_name='Статус сотрудника')),
                ('email_confirmed', models.BooleanField(default=False, help_text='Подтвержден ли email адрес пользователя', verbose_name='Email подтвержден')),
                ('date_joined', models.DateTimeField(auto_now_add=True, help_text='Дата и время регистрации пользователя', verbose_name='Дата регистрации')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, help_text='IP адрес последнего входа в систему', null=True, verbose_name='IP последнего входа')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-date_joined'],
            },
        ),
    ]
